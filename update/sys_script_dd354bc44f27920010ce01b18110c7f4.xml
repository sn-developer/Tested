<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_snc_snd_tested_user_test_step</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_snc_snd_tested_user_test_step">stateVALCHANGES^EQ<item endquery="false" field="state" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>SND - Roll up test step state</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
  var state = current.getValue('state'),
      test_case = current.getValue('user_test_case');

  function _updateParent(parent_id, state) {
    var gr;

    gr = new GlideRecord('x_snc_snd_tested_user_test_case');
    gr.addQuery('sys_id', parent_id);
    gr.query();

    if (!gr.next()) {
      return;
    }

    gr.state = state;
    gr.update();
  }

  function _isLast(parent_id) {
    var gr;

    gr = new GlideRecord('x_snc_snd_tested_user_test_step');
    gr.addQuery('user_test_case', '=', parent_id);
    gr.addQuery('state', '=', 'In Progress');
    gr.setLimit(1);
    gr.query();

    return !gr.next();
  }

  if (state == 'Fail') {
    _updateParent(test_case, 'Fail');
    return;
  }

  if (_isLast(test_case)) {
    _updateParent(test_case, 'Pass');
  }
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2016-05-18 04:00:15</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>dd354bc44f27920010ce01b18110c7f4</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>SND - Roll up test step state</sys_name>
        <sys_overrides/>
        <sys_package display_value="SND Tested" source="x_snc_snd_tested">b20d02084fa3920010ce01b18110c7bc</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="SND Tested">b20d02084fa3920010ce01b18110c7bc</sys_scope>
        <sys_update_name>sys_script_dd354bc44f27920010ce01b18110c7f4</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2016-05-18 04:00:15</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=dd354bc44f27920010ce01b18110c7f4"/>
</record_update>
